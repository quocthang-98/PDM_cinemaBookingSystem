
package cinemabookingsystem2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author ACER
 */
public class CJFrame4 extends javax.swing.JFrame {

    /**
     * Creates new form CJFram4
     */
    
    private CJFrame3 frm;
    private String movieName;
    private String timeStart;
    private String roomName;
    private int[] seat;
    private String showtimeID;
    private int[] roomSeatID = new int[10];
    private StringBuilder strBuilder = new StringBuilder();
    private int seatOrderedCount = 0;
    private int[] seatordered = new int[120];
    private int ticketPrice = 45000;
    private int noOfBooked;
    private int[] bookedTicketID = new int[100];
    private int ticketID;
    
    private Random randTicketID = new Random();
    
    public CJFrame4(CJFrame3 frm, String movieName, String timeStart, String roomName, int[] seat, String showtimeID) {
        initComponents();
        
        this.frm = frm;
        this.movieName = movieName;
        this.timeStart = timeStart;
        this.roomName = roomName;
        this.seat = seat;
        this.showtimeID = showtimeID;
        
        
        getTicket();
        
        jlblMovieName.setText(movieName);
        jlblTimeStart.setText(timeStart);
        jlblRoom.setText(roomName);
        jlblSeat.setText(strBuilder.toString());
        jlblNOS.setText("" + seatOrderedCount);
        jlblPrice.setText(ticketPrice * seatOrderedCount + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblNOS1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jlblMovieName = new javax.swing.JLabel();
        jlblTimeStart = new javax.swing.JLabel();
        jlblSeat = new javax.swing.JLabel();
        jlblNOS = new javax.swing.JLabel();
        jlblPrice = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jlblRoom = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jlblNOS1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jlblNOS1.setText("seatCount");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Your Ticket");
        setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        setPreferredSize(new java.awt.Dimension(610, 385));
        setResizable(false);

        jPanel1.setLayout(null);

        btnBack.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack);
        btnBack.setBounds(490, 250, 90, 26);

        btnConfirm.setBackground(new java.awt.Color(255, 51, 51));
        btnConfirm.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        btnConfirm.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        jPanel1.add(btnConfirm);
        btnConfirm.setBounds(490, 280, 90, 26);

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));

        jLabel3.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        jLabel3.setText("Screen");

        jLabel4.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        jLabel4.setText("Time Start:");

        jLabel5.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        jLabel5.setText("Seat(s):");

        jLabel6.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        jLabel6.setText("Number Of Seats:");

        jLabel7.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        jLabel7.setText("Price:");

        jlblMovieName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jlblMovieName.setText("movieName");

        jlblTimeStart.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jlblTimeStart.setText("timeStart");

        jlblSeat.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jlblSeat.setText("seats");

        jlblNOS.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jlblNOS.setText("seatCount");

        jlblPrice.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jlblPrice.setText("price");

        jLabel8.setFont(new java.awt.Font("UTM Avo", 0, 12)); // NOI18N
        jLabel8.setText("Movie:");

        jlblRoom.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jlblRoom.setText("room");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblNOS, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jlblMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jlblSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jlblTimeStart, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlblRoom)))))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jlblMovieName)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jlblTimeStart))
                    .addComponent(jlblRoom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jlblSeat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jlblNOS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jlblPrice))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(110, 130, 360, 180);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cinemabookingsystem2/600_352.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 600, 352);

        jLabel2.setFont(new java.awt.Font("UTM Avo", 0, 14)); // NOI18N
        jLabel2.setText("Please confirm your purchase:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(90, 80, 217, 21);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        frm.resetseat();
        frm.setVisible(true);
        this.setVisible(false);  
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
//         TODO add your handling code here:

        DateFormat dateFormat = new SimpleDateFormat("MM-dd-YYYY HH:mm:ss");
        Date currentDate = new Date();
        String currentDateString = dateFormat.format(currentDate);
        System.out.println("My date is: " + currentDateString);

        String connectionUrl = "jdbc:sqlserver://localhost:1433;DatabaseName=CinemaBookingSystem;user=sa;password=090803;encrypt=false";

        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement();) {
            for (int i=0; i<seatOrderedCount; ++i)
            {
            ticketIDGenerator();

            String SQL = "INSERT INTO Ticket"
                        + " VALUES ("
                        + "'" + ticketID + "', "
                        + roomSeatID[i]
                        + ", '" + showtimeID + "', '"
                        + currentDateString + "', "
                        + "45000)";
            
            stmt.executeUpdate(SQL);
            System.out.println("Wassup, my name is Cho-kun");
            }
            
            if (true) {
            JOptionPane.showMessageDialog(null, "You have successfully purchased your tickets!", "Your ticket is ready", JOptionPane.INFORMATION_MESSAGE);
        }
  
        }
        catch (SQLException e) {            
        }
        
        frm.setAllSeatsOff();
        frm.resetseat();
        frm.allSeatsCheck();
        frm.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    public void ticketIDGenerator () {
        
        noOfBooked = 0;
        for (int i = 0; i < 100; i++) 
            bookedTicketID[i] = 0;
        
        String connectionUrl = "jdbc:sqlserver://localhost:1433;DatabaseName=CinemaBookingSystem;user=sa;password=090803;encrypt=false";

        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement();)
        {
            String SQL = "SELECT ticketID FROM Ticket";
            ResultSet rs = stmt.executeQuery(SQL);
            
            
            ticketID = 1000 + randTicketID.nextInt((9999 - 1000));
            boolean allMatched = true;
            
            while (rs.next()) {
                bookedTicketID[noOfBooked] = Integer.parseInt(String.valueOf(rs.getObject(1)));
                noOfBooked++;
            }
            
            while (allMatched) {
                
                for (int i = 0; i < noOfBooked; i++) {
                    
                    if (ticketID == bookedTicketID[i]) {
                        allMatched = true;   
                        break;
                    }
                    
                    if (i == noOfBooked - 1 && bookedTicketID[i] != ticketID)
                        allMatched = false;
                }
                
                
                if (allMatched)
                    ticketID = 1000 + randTicketID.nextInt((9999 - 1000));
            }
        
        }
        catch (SQLException e) {            
        }
    }
    
    
    public void getTicket () {
        strBuilder.setLength(0);
        String connectionUrl = "jdbc:sqlserver://localhost:1433;DatabaseName=CinemaBookingSystem;user=sa;password=090803;encrypt=false";

        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement();) {
            
            String SQL = "SELECT Ticket.roomseatID"
                        + " FROM Ticket"
                        + " JOIN Showtimes ON Ticket.showtimeID = Showtimes.showtimeID"
                        + " JOIN Movie ON Movie.movieID = Showtimes.movieID"
                        + " WHERE Movie.movieName = '" + movieName + "' AND Showtimes.timeStart = '" + timeStart + "'";
            ResultSet rs = stmt.executeQuery(SQL);
            
     
             for (int i=0; i<120; ++i){seatordered[i]=0;}
            while (rs.next()) {
                
                for (int i = 0; i < 120; i++) {
                    
                    if (i == ((Integer.parseInt(String.valueOf(rs.getObject(1))) - 1) % 120)) {
                       
                        seatordered[i] = 1;
                    }
                    

                }
            }
            for (int i=0; i<120; ++i){
                    
                    if (seat[i] == 1 && roomName.equals("Room 101") && seatordered[i] == 0) {
                         roomSeatID[seatOrderedCount] = i +1;
                         strBuilder.append(numberToSeatID(roomSeatID[seatOrderedCount]-1)).append(" ");
                         seatOrderedCount++;
                         

                    }         
                     else if (seat[i] == 1 && roomName.equals("Room 203") && seatordered[i] == 0) {
                         roomSeatID[seatOrderedCount] = i + 120 +1;
                         strBuilder.append(numberToSeatID(roomSeatID[seatOrderedCount]-1)).append(" ");
                         seatOrderedCount++;
                       


                    }
                     else if (seat[i] == 1 && roomName.equals("Room 105") && seatordered[i] == 0){
                            roomSeatID[seatOrderedCount] = i + 240 +1;
                            strBuilder.append(numberToSeatID(roomSeatID[seatOrderedCount]-1)).append(" ");
                            seatOrderedCount++;
                           

                    }
            }
        }
        catch (SQLException e) {            
        }
    }

    public String numberToSeatID (int seatNumber) {
        if ((seatNumber) / 12 % 10 == 0)
            return "A" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 1)
            return "B" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 2)
            return "C" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 3)
            return "D" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 4)
            return "E" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 5)
            return "F" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 6)
            return "G" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 7)
            return "H" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 8)
            return "I" + String.valueOf((seatNumber) % 12 + 1);
        else if ((seatNumber) / 12 % 10 == 9)
            return "J" + String.valueOf((seatNumber) % 12 + 1);
        else return "";
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jlblMovieName;
    private javax.swing.JLabel jlblNOS;
    private javax.swing.JLabel jlblNOS1;
    private javax.swing.JLabel jlblPrice;
    private javax.swing.JLabel jlblRoom;
    private javax.swing.JLabel jlblSeat;
    private javax.swing.JLabel jlblTimeStart;
    // End of variables declaration//GEN-END:variables
}
